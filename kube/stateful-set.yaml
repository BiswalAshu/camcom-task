apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql-tryout
  template:
    metadata:
      labels:
        app: mysql-tryout
    spec:
      nodeSelector:
        topology.kubernetes.io/zone: ap-south-1a
      containers:
        - name: mysql
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: data-volume
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              cpu: 62m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: data-volume
          configMap:
            name: data-config

      # init containers
      # initContainers:
      #   - name: init-script
      #     image: mysql:latest
      #     command: ["/bin/sh", "-c"]
      #     args:
      #       - |
      #         until mysqladmin ping -h localhost:3306 -u root -p$MYSQL_ROOT_PASSWORD --silent; do
      #           echo "not connected"
      #           sleep 5
      #         done
      #         echo "connection established"
      #         mysql -h localhost:3306 -u root -p$MYSQL_ROOT_PASSWORD -e "source /docker-entrypoint-initdb.d/init.sql"
      #     env:
      #       - name: MYSQL_ROOT_PASSWORD
      #         value: root
      #     volumeMounts:
      #       - name: mysql-persistent-storage
      #         mountPath: /var/lib/mysql
            # - name: data-volume
            #   mountPath: /docker-entrypoint-initdb.d